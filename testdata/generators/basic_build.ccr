build(
  name      = "gz_build",
  steps     = [
    step.unpack_gz(to = 'src', path = 'cool.tar.gz'),
  ],
  output    = {
    'src/cool.txt': strip_prefix('src/'),
  },
  host_deps = [
    ":binutils",
  ],
)

build(
  name      = "xz_build",
  steps     = [
    step.unpack_xz(to = 'src', path = 'archive.tar.xz'),
  ],
  output    = {
    'src/fake.txt': 'cool.txt',
  },
  host_deps = [
    ":binutils",
  ],
)

build(
  name      = "exec_build",
  steps     = [
    step.shell_cmd('sha256sum /to_hash > /in.txt'),
    step.shell_cmd('chmod 0600 /in.txt'),
  ],
  output    = {
    'in.txt': 'out.txt',
  },
  host_deps = [
    "common://toolchains:bash" >> semver("4"),
    "common://toolchains:coreutils" >> semver("5"),
    ":binutils",
  ],
  patch_inputs = {
    "/to_hash": file('fake.txt'),
  },
)

toolchain(
  name     = "binutils",
  binaries = {
    "ls": "/bin/ls",
    "cp": "/bin/cp",
    "chmod": "/bin/chmod",
  },
)

build(
  name      = "missing_dep_build",
  host_deps = [
    ":missing",
  ],
)

toolchain(
  name     = "missing",
  binaries = {
    "something_missing": "/dfgldikfjdfghlkdfgjhkldfgjh",
  },
)

resource(
  name   = "gz_output",
  parent = "common://resources:file",
  path   = "cool.txt",
  source = ":gz_build",
)

resource(
  name   = "xz_output",
  parent = "common://resources:file",
  path   = "cool.txt",
  source = ":xz_build",
)

resource(
  name   = "exec_output",
  parent = "common://resources:file",
  path   = "out.txt",
  source = ":exec_build",
)

resource(
  name   = "output_missing_in_build",
  parent = "common://resources:file",
  path   = "missing.txt",
  source = ":gz_build",
)

resource(
  name   = "output_missing_host_dep",
  parent = "common://resources:file",
  path   = "missing.txt",
  source = ":missing_dep_build",
)
